{"version":3,"sources":["assets/svg/ic_chevron.svg","common/ui/dropdown/dropdown.tsx","common/hooks/use-outside-click.ts","common/hooks/use-router.ts","services/chart-data/utils.ts","services/chart-data/use-chart-data-service.ts","pages/summary-to-country/summary-to-country-chart/summary-to-country-chart.tsx","pages/summary-to-country/summary-to-country-chart/consts.ts","pages/summary-to-country/statistics-country/utils.ts","pages/summary-to-country/statistics-country/statistics-country.tsx","pages/summary-to-country/summary-to-country.tsx"],"names":["_defs","_g","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgIcChevron","_ref","svgRef","title","titleId","props","width","height","xmlns","xmlnsXlink","ref","id","d","fill","fillRule","xlinkHref","mask","ForwardRef","bs","bem","Dropdown","options","label","disabled","icon","onClick","onOptionClick","value","onChange","theme","loadingOptions","b","useState","toggled","setToggled","handleToggle","useCallback","s","handleClose","handleOptionClick","option","outsideClickRef","callback","container","useRef","handleEvent","e","current","contains","useEffect","document","addEventListener","removeEventListener","useOutsideClick","className","opened","map","index","Suggestion","onSelect","expand","handleSelect","defaultProps","useParams","useContext","__RouterContext","match","params","parseResponseToChardData","arr","summaryToCountry","Country","CountryCode","data","item","array","ID","Date","dayjs","format","Active","Confirmed","Deaths","Recovered","ConfirmedPerDay","calculatedDataPerDay","DeathsPerDay","ConfirmedAvgOverWeek","DeathsAvgOverWeek","type","result","avgConfirmedPerDay","avgDeathsPerDay","slice","reduce","acc","val","Math","round","calculatedAverageOverWeek","collectionOptions","list","filter","regex","RegExp","toLowerCase","Slug","SummaryToCountryChart","ThemeContext","bt","t","useTranslation","slug","inputValueDropdown","setInputValueDropdown","periodValueDropdown","setPeriodValueDropdown","typeDataValueDropdown","setTypeDataValueDropdown","useCountriesService","getCountries","countries","chartData","setChartData","error","setError","loading","setLoading","getDayone","a","country","url","http","get","formattedData","getDayOneStat","useChartDataService","getStat","useStaticsCountry","typeDataOptions","timePeriodOptions","labelShort","labelCountry","window","innerWidth","history","push","undefined","find","getDateLabelDropdown","Boolean","ResponsiveContainer","ComposedChart","margin","top","right","bottom","left","CartesianGrid","stroke","colors","black60","blue","XAxis","gray80","black40","dataKey","scale","fontSize","tickMargin","interval","YAxis","Tooltip","contentStyle","backgroundColor","borderColor","Bar","name","aqua","Line","orange","dot","Legend","wrapperStyle","position","marginLeft","fontFamily","formatNumber","num","sign","number","parseFloat","residueCount","toString","restStr","substr","baseStr","join","concat","StatisticsCountry","stat","continent","population","day","cases","total","new","deaths","SummaryToCountry"],"mappings":"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","file":"static/js/4.c16f2dcc.chunk.js","sourcesContent":["var _defs, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIcChevron(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"ic_chevron_1\",\n    d: \"M7.41 8.58L12 13.17l4.59-4.59L18 10l-6 6-6-6z\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"ic_chevron_2\",\n    fill: \"#fff\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#ic_chevron_1\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#ic_chevron_2)\",\n    fill: \"#57585A\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcChevron);\nexport default __webpack_public_path__ + \"static/media/ic_chevron.112e76ae.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useState, useCallback, ReactNode} from 'react';\r\n\r\nimport {Button} from 'common/ui/button';\r\nimport {Options, Option, Theme} from 'common/types';\r\nimport {useOutsideClick} from 'common/hooks/use-outside-click';\r\nimport {bem} from 'common/bem';\r\nimport {ReactComponent as ChevronIcon} from 'assets/svg/ic_chevron.svg';\r\n\r\nimport {Input} from '../input';\r\n\r\nimport './dropdown.scss';\r\n\r\nconst bs = bem('dropdown');\r\n\r\ntype Props<T> = {\r\n  options: Options<T>;\r\n  value?: string;\r\n  onChange?: (value?: any) => void;\r\n  label?: string;\r\n  disabled?: boolean;\r\n  icon?: ReactNode;\r\n  onClick?: () => void;\r\n  onOptionClick?: (value?: T) => void;\r\n  theme?: Theme;\r\n  loadingOptions?: boolean;\r\n};\r\n\r\nexport function Dropdown<T>({\r\n  options,\r\n  label,\r\n  disabled,\r\n  icon,\r\n  onClick,\r\n  onOptionClick,\r\n  value,\r\n  onChange,\r\n  theme,\r\n  loadingOptions,\r\n}: Props<T>) {\r\n  const b = theme === 'dark' ? bem('dropdown', theme) : bs;\r\n  const [toggled, setToggled] = useState<boolean>(false);\r\n\r\n  const handleToggle = useCallback(() => {\r\n    if (onClick) {\r\n      onClick();\r\n    }\r\n    setToggled((s) => !s);\r\n  }, [onClick]);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setToggled(false);\r\n  }, []);\r\n\r\n  const handleOptionClick = useCallback(\r\n    (option: Option<T>) => {\r\n      if (onOptionClick) {\r\n        onOptionClick(option.value);\r\n      }\r\n      handleClose();\r\n    },\r\n    [onOptionClick, handleClose],\r\n  );\r\n\r\n  const outsideClickRef = useOutsideClick<HTMLDivElement>(() => {\r\n    handleClose();\r\n  });\r\n\r\n  return (\r\n    <div className={b({opened: toggled})} ref={outsideClickRef}>\r\n      {toggled && (\r\n        <div className={b('list-wrapper')}>\r\n          {onChange && <Input className={b('input')} value={value} onChange={(value) => onChange(value)} />}\r\n          <ul>\r\n            {loadingOptions && <div className={b('list-item')}>loading...</div>}\r\n            {options.map((option, index) => (\r\n              <Suggestion key={index} option={option} onSelect={handleOptionClick} className={b('list-item')} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n      <Button disabled={disabled} className={b('btn', {expand: toggled})} onClick={handleToggle}>\r\n        {icon && <span className={b('btn-icon')}>{icon}</span>}\r\n        <span className={b('btn-text')}>{label}</span>\r\n        <ChevronIcon />\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nDropdown.defaultProps = {\r\n  label: '',\r\n};\r\n\r\ntype SuggestionProps<T> = {\r\n  option: Option<T>;\r\n  onSelect: (option: Option<T>) => void;\r\n  className?: string;\r\n};\r\n\r\nfunction Suggestion<T>(props: SuggestionProps<T>) {\r\n  const {option, onSelect, className} = props;\r\n\r\n  const handleSelect = useCallback(() => {\r\n    onSelect(option);\r\n  }, [option, onSelect]);\r\n\r\n  return (\r\n    <li className={className} onClick={handleSelect}>\r\n      {option.label}\r\n    </li>\r\n  );\r\n}\r\n","import {useEffect, useRef, useCallback} from 'react';\r\n\r\nexport function useOutsideClick<T extends HTMLElement>(callback: EventListener) {\r\n  const container = useRef<T>(null);\r\n\r\n  const handleEvent = useCallback(\r\n    (e: Event) => {\r\n      if (container.current && e.target !== null) {\r\n        if (!container.current.contains(e.target as Node)) {\r\n          callback(e);\r\n        }\r\n      }\r\n    },\r\n    [container, callback],\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleEvent, true);\r\n    document.addEventListener('touchstart', handleEvent, true);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleEvent, true);\r\n      document.removeEventListener('touchstart', handleEvent, true);\r\n    };\r\n  }, [handleEvent]);\r\n\r\n  return container;\r\n}\r\n","import {__RouterContext} from 'react-router';\r\nimport {useContext} from 'react';\r\n\r\nexport function useParams<T>(): T {\r\n  const context = useContext(__RouterContext);\r\n  return context.match.params as T;\r\n}\r\n","import dayjs from 'dayjs';\r\n\r\nimport {\r\n  GetSummaryToCountry,\r\n  SummaryToCountry,\r\n  SummaryToCountryChartState,\r\n  SummaryToCountryChartUnit,\r\n} from 'services/chart-data/types';\r\n\r\nexport function parseResponseToChardData(arr: GetSummaryToCountry): SummaryToCountryChartState {\r\n  const summaryToCountry: SummaryToCountryChartState = {\r\n    Country: arr[0].Country,\r\n    CountryCode: arr[0].CountryCode,\r\n    data: arr.map((item, index, array) => ({\r\n      ID: item.ID,\r\n      Date: dayjs(item.Date).format(\"D MMM 'YY\"),\r\n      Active: item.Active,\r\n      Confirmed: item.Confirmed,\r\n      Deaths: item.Deaths,\r\n      Recovered: item.Recovered,\r\n      ConfirmedPerDay: calculatedDataPerDay(index, item, array, 'Confirmed'),\r\n      DeathsPerDay: calculatedDataPerDay(index, item, array, 'Deaths'),\r\n      ConfirmedAvgOverWeek: 0,\r\n      DeathsAvgOverWeek: 0,\r\n    })),\r\n  };\r\n\r\n  function calculatedDataPerDay(\r\n    index: number,\r\n    item: SummaryToCountry,\r\n    array: SummaryToCountry[],\r\n    type: 'Confirmed' | 'Deaths',\r\n  ): number {\r\n    const result = index ? item[type] - array[index - 1][type] : item[type];\r\n    return result < 0 ? 0 : result;\r\n  }\r\n\r\n  function calculatedAverageOverWeek(): SummaryToCountryChartUnit[] {\r\n    const WEEK_NUM = 7;\r\n    const data = summaryToCountry.data;\r\n    const result: SummaryToCountryChartUnit[] = [];\r\n\r\n    for (let i = data.length - 1; i >= 0; i--) {\r\n      let avgConfirmedPerDay = 0;\r\n      let avgDeathsPerDay = 0;\r\n      if (i >= WEEK_NUM) {\r\n        avgConfirmedPerDay =\r\n          data.slice(i - WEEK_NUM + 1, i + 1).reduce((acc, val) => acc + val.ConfirmedPerDay, 0) / WEEK_NUM;\r\n        avgDeathsPerDay =\r\n          data.slice(i - WEEK_NUM + 1, i + 1).reduce((acc, val) => acc + val.DeathsPerDay, 0) / WEEK_NUM;\r\n      }\r\n      result[i] = {\r\n        ...data[i],\r\n        ConfirmedAvgOverWeek: Math.round(avgConfirmedPerDay),\r\n        DeathsAvgOverWeek: Math.round(avgDeathsPerDay),\r\n      };\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  return {\r\n    ...summaryToCountry,\r\n    data: calculatedAverageOverWeek(),\r\n  };\r\n}\r\n","import {useState} from 'react';\r\n\r\nimport http from 'common/http';\r\nimport {GetSummaryToCountry, SummaryToCountryChartState} from 'services/chart-data/types';\r\n\r\nimport {parseResponseToChardData} from './utils';\r\n\r\nexport type ChartDataStatService = {\r\n  chartData: Nullable<SummaryToCountryChartState>;\r\n  loading: boolean;\r\n  error: boolean;\r\n  getDayOneStat: (country: string) => void;\r\n};\r\n\r\nexport const useChartDataService = (): ChartDataStatService => {\r\n  const [chartData, setChartData] = useState<Nullable<SummaryToCountryChartState>>(null);\r\n  const [error, setError] = useState<boolean>(false);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const getDayone = async (country = 'ru') => {\r\n    if (error) setError(false);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const url = `/dayone/country/${country}`;\r\n      const data = await http.get<never, GetSummaryToCountry>(url);\r\n\r\n      const formattedData = parseResponseToChardData(data);\r\n      setChartData(formattedData);\r\n    } catch (e) {\r\n      setError(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    chartData: chartData,\r\n    loading,\r\n    error,\r\n    getDayOneStat: getDayone,\r\n  };\r\n};\r\n","import React, {useEffect, useState, useContext} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {ComposedChart, Line, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer} from 'recharts';\r\n\r\nimport {Dropdown} from 'common/ui/dropdown';\r\nimport {Wrapper} from 'common/ui/wrapper';\r\nimport {GetCountriesResponse} from 'services/countries/types';\r\nimport {ThemeContext} from 'common/context';\r\nimport {useParams} from 'common/hooks/use-router';\r\nimport {bem} from 'common/bem';\r\nimport {history} from 'common/routing';\r\nimport {Options} from 'common/types';\r\nimport colors from 'common/styles/_export.module.scss';\r\nimport {useChartDataService} from 'services/chart-data/use-chart-data-service';\r\nimport {useCountriesService} from 'services/countries/use-countries-service';\r\nimport {useStaticsCountry} from 'services/statistics-country';\r\n\r\nimport {TWO_WEEK, MONTH, TREE_MONTH, HALF_YEAR, ALL_TIME} from './consts';\r\nimport './summary-to-country-chart.scss';\r\n\r\nfunction collectionOptions(list: GetCountriesResponse, filter: string): Options {\r\n  const regex = new RegExp(`^${filter.toLowerCase()}`);\r\n  return list\r\n    .filter((item) => item.Country.toLowerCase().match(regex))\r\n    .map((item) => ({\r\n      label: item.Country,\r\n      value: item.Slug,\r\n    }));\r\n}\r\n\r\ntype TypeData = 'ConfirmedPerDay' | 'DeathsPerDay';\r\n\r\nfunction getDataKeyLine(type: TypeData) {\r\n  if (type === 'ConfirmedPerDay') {\r\n    return 'ConfirmedAvgOverWeek';\r\n  }\r\n  if (type === 'DeathsPerDay') {\r\n    return 'DeathsAvgOverWeek';\r\n  }\r\n}\r\n\r\nexport function SummaryToCountryChart() {\r\n  const {theme} = useContext(ThemeContext);\r\n  const bt = bem('summary-to-country-chart', theme);\r\n\r\n  const {t} = useTranslation();\r\n  const {slug} = useParams<{slug: string}>();\r\n\r\n  const [inputValueDropdown, setInputValueDropdown] = useState<string>('');\r\n  const [periodValueDropdown, setPeriodValueDropdown] = useState<number>(HALF_YEAR);\r\n  const [typeDataValueDropdown, setTypeDataValueDropdown] = useState<TypeData>('ConfirmedPerDay');\r\n  const {getCountries, countries} = useCountriesService();\r\n\r\n  const {chartData: data, getDayOneStat, loading} = useChartDataService();\r\n  const {getStat} = useStaticsCountry();\r\n\r\n  const formattedData = data?.data.slice(-periodValueDropdown) || [];\r\n\r\n  const typeDataOptions: Options = [\r\n    {label: t('chart.options.confirmed'), value: 'ConfirmedPerDay'},\r\n    {label: t('chart.options.deaths'), value: 'DeathsPerDay'},\r\n  ];\r\n  const timePeriodOptions: Options = [\r\n    {label: t('chart.options.all_time'), value: ALL_TIME, labelShort: 'all'},\r\n    {label: t('chart.options.2week'), value: TWO_WEEK, labelShort: '2W'},\r\n    {label: t('chart.options.30days'), value: MONTH, labelShort: 'M'},\r\n    {label: t('chart.options.3months'), value: TREE_MONTH, labelShort: '3M'},\r\n    {label: t('chart.options.6months'), value: HALF_YEAR, labelShort: '6M'},\r\n  ];\r\n\r\n  function getDateLabelDropdown() {\r\n    const option = timePeriodOptions.find((item) => item.value === periodValueDropdown);\r\n    return window.innerWidth > 768 ? option?.label : option?.labelShort;\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDayOneStat(slug);\r\n    getCountries();\r\n  }, []);\r\n\r\n  const handleChangeCountry = (value?: string) => {\r\n    if (value) {\r\n      history.push(`/summary/${value}`);\r\n      getDayOneStat(value);\r\n      getStat(value);\r\n    } else {\r\n      getDayOneStat(slug);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = ({target: {value}}: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputValueDropdown(value);\r\n  };\r\n\r\n  const handleTogglePeriod = (value?: number) => {\r\n    setPeriodValueDropdown(value || 0);\r\n  };\r\n\r\n  const handleToggleTypeData = (value?: TypeData) => {\r\n    setTypeDataValueDropdown(value || 'ConfirmedPerDay');\r\n  };\r\n\r\n  const labelCountry = window.innerWidth >= 768 ? data?.Country : data?.CountryCode;\r\n\r\n  return (\r\n    <div className={bt('container')}>\r\n      <Wrapper className={bt('dropdown-group')}>\r\n        <Dropdown\r\n          label={labelCountry || 'not selected'}\r\n          options={collectionOptions(countries, inputValueDropdown)}\r\n          onOptionClick={handleChangeCountry}\r\n          value={inputValueDropdown}\r\n          onChange={handleInputChange}\r\n          theme={theme}\r\n          onClick={countries.length === 0 ? getCountries : undefined}\r\n          loadingOptions={loading}\r\n        />\r\n        <Dropdown\r\n          label={getDateLabelDropdown()}\r\n          options={timePeriodOptions}\r\n          onOptionClick={handleTogglePeriod}\r\n          theme={theme}\r\n          disabled={!Boolean(data?.Country)}\r\n        />\r\n        <Dropdown\r\n          label={typeDataOptions.find((item) => item.value === typeDataValueDropdown)?.label || typeDataValueDropdown}\r\n          options={typeDataOptions}\r\n          onOptionClick={handleToggleTypeData}\r\n          theme={theme}\r\n          disabled={!Boolean(data?.Country)}\r\n        />\r\n      </Wrapper>\r\n      {formattedData.length > 0 && (\r\n        <ResponsiveContainer className={bt('chart')} height={400}>\r\n          <ComposedChart\r\n            data={formattedData}\r\n            margin={{\r\n              top: 0,\r\n              right: 50,\r\n              bottom: 0,\r\n              left: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid\r\n              fill={'var(--background-secondary)'}\r\n              stroke={theme === 'dark' ? colors.black60 : colors.blue}\r\n            />\r\n            <XAxis\r\n              stroke={theme === 'dark' ? colors.gray80 : colors.black40}\r\n              dataKey=\"Date\"\r\n              scale=\"band\"\r\n              fontSize={13}\r\n              tickMargin={5}\r\n              interval={'preserveStart'}\r\n            />\r\n            <YAxis stroke={theme === 'dark' ? colors.gray80 : colors.black40} fontSize={14} />\r\n            <Tooltip\r\n              contentStyle={{\r\n                backgroundColor: 'var(--main-background-color)',\r\n                borderColor: 'var(--main-border-color)',\r\n              }}\r\n            />\r\n            <Bar name={t('chart.options.confirmed')} dataKey={typeDataValueDropdown} fill={colors.aqua} />\r\n            <Line\r\n              dataKey={getDataKeyLine(typeDataValueDropdown)}\r\n              stroke={colors.orange}\r\n              name={t('chart.avg7')}\r\n              type=\"monotone\"\r\n              dot={periodValueDropdown === TWO_WEEK || periodValueDropdown === MONTH}\r\n            />\r\n            <Legend wrapperStyle={{position: 'static', fontSize: 15, marginLeft: 15}} fontFamily=\"apercu\" />\r\n          </ComposedChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export const ALL_TIME = 0;\r\nexport const TWO_WEEK = 14;\r\nexport const MONTH = 30;\r\nexport const TREE_MONTH = 93;\r\nexport const HALF_YEAR = 183;\r\n","export const formatNumber = (num: number | string | undefined | null, sign?: string): string => {\r\n  if (num === undefined || num === null) return '';\r\n\r\n  const number = typeof num === 'string' ? parseFloat(num) : num;\r\n\r\n  const residueCount = number.toString().length % 3;\r\n  const restStr = number.toString().substr(0, residueCount);\r\n  const baseStr = (\r\n    number\r\n      .toString()\r\n      .substr(residueCount)\r\n      .match(/.{1,3}/g) || []\r\n  ).join(' ');\r\n\r\n  const space = restStr.length > 0 ? ' ' : '';\r\n\r\n  const result = [restStr, space, baseStr].join('');\r\n\r\n  return (sign ? sign : '').concat(result);\r\n};\r\n","import React, {useContext, useEffect} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nimport {bem} from 'common/bem';\r\nimport {ThemeContext} from 'common/context';\r\nimport {useParams} from 'common/hooks/use-router';\r\nimport {useStaticsCountry} from 'services/statistics-country';\r\n\r\nimport {formatNumber} from './utils';\r\nimport './statistics-country.scss';\r\n\r\nexport const StatisticsCountry = () => {\r\n  const {t} = useTranslation();\r\n  const {slug} = useParams<{slug: string}>();\r\n  const {theme} = useContext(ThemeContext);\r\n  const bt = bem('statistics-country', theme);\r\n\r\n  const {stat, getStat, loading} = useStaticsCountry();\r\n\r\n  useEffect(() => {\r\n    if (slug) getStat(slug);\r\n  }, []);\r\n\r\n  if (!stat) {\r\n    return <div className={bt('container')}>No data</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={bt('container')}>\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <div className={bt('summary')}>\r\n          <div className={bt('summary-inner')}>\r\n            <div className={bt('label-head')}>{stat?.continent}</div>\r\n            <div className={bt('label-head')}>{stat?.country}</div>\r\n            <div className={bt('label-head')}>\r\n              {t('chart.population')}: {formatNumber(stat?.population)}\r\n            </div>\r\n            <div className={bt('label-mini')}>\r\n              {t('chart.updated')} {stat?.day}\r\n            </div>\r\n          </div>\r\n          <div className={bt('summary-inner')}>\r\n            <div className={bt('summary-inner-row')}>\r\n              <div className={bt('summary-inner-cell')}>\r\n                <div className={bt('label')}>{t('chart.new_cases')}</div>\r\n                <div className={bt('mark')}>{formatNumber(stat?.cases.total)}</div>\r\n                <div className={bt('mark-light')}>{formatNumber(stat?.cases.new, '+')}</div>\r\n              </div>\r\n              <div className={bt('summary-inner-cell')}>\r\n                <div className={bt('label')}>\r\n                  {t('chart.cases')} ({t('chart.1_month')})\r\n                </div>\r\n                <div className={bt('mark')}>{formatNumber(stat?.cases['1M_pop'])}</div>\r\n              </div>\r\n            </div>\r\n            <div className={bt('summary-inner-row')}>\r\n              <div className={bt('summary-inner-cell')}>\r\n                <div className={bt('label')}>{t('chart.deaths')}</div>\r\n                <div className={bt('mark')}>{formatNumber(stat?.deaths.total)}</div>\r\n                <div className={bt('mark-light')}>{formatNumber(stat?.deaths.new, '+')}</div>\r\n              </div>\r\n              <div className={bt('summary-inner-cell')}>\r\n                <div className={bt('label')}>\r\n                  {t('chart.cases')} ({t('chart.1_month')})\r\n                </div>\r\n                <div className={bt('mark')}>{formatNumber(stat?.deaths['1M_pop'])}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, {useContext} from 'react';\r\n\r\nimport {ThemeContext} from 'common/context';\r\nimport {bem} from 'common/bem';\r\n\r\nimport {SummaryToCountryChart} from './summary-to-country-chart';\r\nimport {StatisticsCountry} from './statistics-country';\r\n\r\nimport './summary-to-country.scss';\r\n\r\nexport function SummaryToCountry() {\r\n  const {theme} = useContext(ThemeContext);\r\n  const b = bem('summary-to-country', theme);\r\n\r\n  return (\r\n    <div className={b()}>\r\n      <div className={b('container')}>\r\n        <SummaryToCountryChart />\r\n        <StatisticsCountry />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}